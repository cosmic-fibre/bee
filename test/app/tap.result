TAP version 13
1..32
ok - true
ok - extra information is not printed on success
not ok - extra printed using yaml only on failure
  ---
  state: some userful information to debug on failure
  details: a table argument formatted using yaml.encode()
  ...
not ok - failed
ok - test marked as ok and skipped # skip
ok - tonumber(48) is 48
ok - 0xff is not 64
not ok - 1 is not 1
  ---
  unexpected: 1
  got: 1
  ...
ok - nil is nil
not ok - 48 is nil
  ---
  expected: nil
  got: 48
  ...
ok - 10 is a number
ok - 0 is also a number
ok - "blabla" is string
not ok - 48 is string
  ---
  expected: string
  got: number
  ...
not ok - nil is string
  ---
  expected: string
  got: nil
  ...
ok - true is boolean
not ok - 1 is boolean
  ---
  expected: boolean
  got: number
  ...
ok - {} is a table
not ok - udata
  ---
  expected: userdata<fiber>
  got: nil
  ...
not ok - udata
  ---
  expected: userdata<some utype>
  got: userdata<fiber>
  ...
ok - udata
not ok - cdata type
  ---
  expected: ctype<int>
  got: string
  ...
not ok - cdata type
  ---
  expected: ctype<int>
  got: number
  ...
ok - cdata type
not ok - cdata type
  ---
  expected: ctype<int>
  got: ctype<unsigned int>
  ...
    # subtest 1
    1..2
    ok - true
    ok - true
    # subtest 1: end
ok - subtest 1
    1..1
    ok - true in subtest
    # hello from subtest
ok - subtest 2
    # 1 level
    1..1
        # 2 level
        1..1
            # 3 level
            1..1
                # 4 level
                1..1
                    # 5 level
                    1..1
                    ok - ok
                    # 5 level: end
                ok - 5 level
                # 4 level: end
            ok - 4 level
            # 3 level: end
        ok - 3 level
        # 2 level: end
    ok - 2 level
    # 1 level: end
ok - 1 level
    # bad plan
    1..3
    ok - true
    # bad plan: end
not ok - bad plan
  ---
  planned: 3
  run: 1
  ...
    # failed subtest
    1..1
    not ok - failed subtest
    # failed subtest: end
not ok - failed subtests
  ---
  planned: 1
  failed: 1
  ...
    # is_deeply
    1..6
    ok - 1 and 1
    ok - abc and abc
    ok - empty tables
    ok - {1} and {1}
    not ok - {1} and {2}
      ---
      path: //1
      expected: 2
      got: 1
      ...
    not ok - {1,2,{3,4}} and {1,2,{3,5}}
      ---
      path: //3/2
      expected: 5
      got: 4
      ...
    # is_deeply: end
not ok - failed subtests
  ---
  planned: 6
  failed: 2
  ...
    # like
    1..2
    ok - like(abcde, cd)
    ok - unlike(abcde, acd)
    # like: end
ok - like
# failed subtest: 15
