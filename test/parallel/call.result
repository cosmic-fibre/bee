db.schema.user.create()
---
...
db.schema.user.grant()
---
...
function f1() return 'testing', 1, false, -1, 1.123, 1e123, nil end
---
...
f1()
---
- testing
- 1
- false
- -1
- 1.123
- 1e+123
- null
...
call f1()
---
- ['testing']
- [1]
- [False]
- [-1]
- [1.123]
- [1e+123]
- [None]
...
f1=nil
---
...
call f1()
---
- error:
    errcode: ER_NO_SUCH_PROC
    errmsg: Procedure 'f1' is not defined
...
function f1() return f1 end
---
...
call f1()
---
- error:
    errcode: ER_PROC_LUA
    errmsg: unsupported Lua type 'function'
...
call dostring('db.error(33333, "Hey!")')
---
- error:
    errcode: ER_UNKNOWN (565)
    errmsg: Unknown error
...

# A test case for Bug#103491
# server CALL processing bug with name path longer than two
# https://bugs.launchpad.net/bee/+bug/1034912

f = function() return 'OK' end
---
...
test = {}
---
...
test.f = f
---
...
test.test = {}
---
...
test.test.f = f
---
...
call f()
---
- ['OK']
...
call test.f()
---
- ['OK']
...
call test.test.f()
---
- ['OK']
...

# Test for Bug #955226
# Lua Numbers are passed back wrongly as strings
#

function foo() return 1, 2, '1', '2' end
---
...
call foo()
---
- [1]
- [2]
- ['1']
- ['2']
...
function f1(...) return {...} end
---
...
function f2(...) return f1({...}) end
---
...
call f1('test_', 'test_')
---
- ['test_', 'test_']
...
call f2('test_', 'test_')
---
- ['test_', 'test_']
...
call f1()
---
- []
...
call f2()
---
- []
...
function f3() return {{'hello'}, {'world'}} end
---
...
call f3()
---
- ['hello']
- ['world']
...
function f3() return {'hello', {'world'}} end
---
...
call f3()
---
- ['hello', ('world',)]
...
function f3() return 'hello', {{'world'}, {'canada'}} end
---
...
call f3()
---
- ['hello']
- [('world',), ('canada',)]
...
function f3() return {}, '123', {{}, {}} end
---
...
call f3()
---
- []
- ['123']
- [(), ()]
...
function f3() return { {{'hello'}} } end
---
...
call f3()
---
- [('hello',)]
...
function f3() return { db.tuple.new('hello'), {'world'} } end
---
...
call f3()
---
- ['hello']
- ['world']
...
function f3() return { {'world'}, db.tuple.new('hello') } end
---
...
call f3()
---
- ['world']
- ['hello']
...
call f1('jason')
---
- ['jason']
...
call f1('jason', 1, 'test', 2, 'stewart')
---
- ['jason', 1, 'test', 2, 'stewart']
...
space = db.schema.create_space('tweedledum', { id = 0 })
---
...
space:create_index('primary', { type = 'hash' })
---
- unique: true
  parts:
  - type: NUM
    fieldno: 1
  id: 0
  space_id: 0
  name: primary
  type: HASH
...
function myreplace(...) return space:replace{...} end
---
...
function myinsert(...) return space:insert{...} end
---
...
insert into t0 values (1, 'test db delete')
---
- [1, 'test db delete']
...
call space:delete(1)
---
- [1, 'test db delete']
...
insert into t0 values (1, 'test db delete')
---
- [1, 'test db delete']
...
call space:delete(1)
---
- [1, 'test db delete']
...
call space:delete(1)
---
...
insert into t0 values (2, 'test db delete')
---
- [2, 'test db delete']
...
call space:delete(1)
---
...
call space:delete(2)
---
- [2, 'test db delete']
...
call space:delete(2)
---
...
space:delete{2}
---
...
insert into t0 values (2, 'test db delete')
---
- [2, 'test db delete']
...
call space:get(2)
---
- [2, 'test db delete']
...
space:delete{2}
---
- [2, 'test db delete']
...
call space:get(2)
---
...
insert into t0 values (2, 'test db.select()')
---
- [2, 'test db.select()']
...
call space:get(2)
---
- [2, 'test db.select()']
...
call space:select(2)
---
- [2, 'test db.select()']
...
space:get{2}
---
- [2, 'test db.select()']
...
space:select{2}
---
- - [2, 'test db.select()']
...
space:get{1}
---
...
space:select{1}
---
- []
...
call myreplace(2, 'hello', 'world')
---
- [2, 'hello', 'world']
...
call myreplace(2, 'goodbye', 'universe')
---
- [2, 'goodbye', 'universe']
...
call space:get(2)
---
- [2, 'goodbye', 'universe']
...
call space:select(2)
---
- [2, 'goodbye', 'universe']
...
space:get{2}
---
- [2, 'goodbye', 'universe']
...
space:select{2}
---
- - [2, 'goodbye', 'universe']
...
call myreplace(2)
---
- [2]
...
call space:get(2)
---
- [2]
...
call space:select(2)
---
- [2]
...
call space:delete(2)
---
- [2]
...
call space:delete(2)
---
...
call myinsert(3, 'old', 2)
---
- [3, 'old', 2]
...
call myinsert(3, 'old', 2)
---
- error:
    errcode: ER_TUPLE_FOUND
    errmsg: Duplicate key exists in unique index 0
...
space:update({3}, {{'=', 1, 4}, {'=', 2, 'new'}})
---
- [4, 'new', 2]
...
call space:get(4)
---
- [4, 'new', 2]
...
call space:select(4)
---
- [4, 'new', 2]
...
space:update({4}, {{'+', 3, 1}})
---
- [4, 'new', 3]
...
space:update({4}, {{'-', 3, 1}})
---
- [4, 'new', 2]
...
call space:get(4)
---
- [4, 'new', 2]
...
call space:select(4)
---
- [4, 'new', 2]
...
function field_x(key, field_index) return space:get(key)[field_index] end
---
...
call field_x(4, 1)
---
- [4]
...
call field_x(4, 2)
---
- ['new']
...
call space:delete(4)
---
- [4, 'new', 2]
...
space:drop()
---
...
db.schema.user.drop()
---
...
