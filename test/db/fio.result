fio = require 'fio'
---
...
errno = require 'errno'
---
...
-- umask
type(fio.umask(0))
---
- number
...
fio.umask()
---
- 0
...
-- pathjoin
fio.basename(nil, nil)
---
- null
...
fio.pathjoin('abc', 'cde')
---
- abc/cde
...
fio.pathjoin('/', 'abc')
---
- /abc
...
fio.pathjoin('abc/', '/cde')
---
- abc/cde
...
fio.pathjoin('/', '/cde')
---
- /cde
...
-- basename
fio.basename(nil)
---
- null
...
fio.basename('/')
---
- 
...
fio.basename('abc')
---
- abc
...
fio.basename('abc.cde', '.cde')
---
- abc
...
fio.basename('abc^cde', '.cde')
---
- abc^cde
...
fio.basename('/path/to/file.cde', '.cde')
---
- file
...
-- other tests
tmpdir = fio.tempdir()
---
...
file1 = fio.pathjoin(tmpdir, 'file.1')
---
...
file2 = fio.pathjoin(tmpdir, 'file.2')
---
...
file3 = fio.pathjoin(tmpdir, 'file.3')
---
...
file4 = fio.pathjoin(tmpdir, 'file.4')
---
...
fio.open(nil)
---
- null
...
fh1 = fio.open(file1, { 'O_RDWR', 'O_TRUNC', 'O_CREAT' }, 0777)
---
...
fh1 ~= nil
---
- true
...
f1s = fh1:stat()
---
...
f1s.size
---
- 0
...
f1s.is_reg()
---
- error: 'usage: stat:is_reg()'
...
f1s:is_reg()
---
- true
...
f1s:is_dir()
---
- false
...
f1s:is_link()
---
- false
...
f1s:is_sock()
---
- false
...
f1s:is_fifo()
---
- false
...
f1s:is_chr()
---
- false
...
f1s:is_blk()
---
- false
...
fh1:seek(121)
---
- 121
...
fh1:stat().size
---
- 0
...
fh1:write(nil)
---
- true
...
fh1:write("Hello, world")
---
- true
...
fh1:stat().size
---
- 136
...
fh1:fsync()
---
- true
...
fh1:fdatasync()
---
- true
...
fio.sync()
---
- true
...
fh1:pread(512, 121)
---
- nilHello, world
...
fh1:pread(5, 121)
---
- nilHe
...
fh1:write("; Ehllo, again")
---
- true
...
fh1:seek(121)
---
- 121
...
fh1:read(13)
---
- nilHello, wor
...
fh1:read(512)
---
- ld; Ehllo, again
...
fh1:pread(512, 14 + 121)
---
- d; Ehllo, again
...
fh1:pwrite("He", 14 + 121)
---
- true
...
fh1:pread(512, 14 + 121)
---
- He Ehllo, again
...
{ fh1:stat().size, fio.stat(file1).size }
---
- - 150
  - 150
...
fh1:seek(121)
---
- 121
...
fh1:read(512)
---
- nilHello, worlHe Ehllo, again
...
fio.link(nil, nil)
---
- error: 'Usage: fio.link(target, linkpath)'
...
fio.link(file1, file2)
---
- true
...
fio.glob(nil)
---
- error: 'Usage: fio.glob(pattern)'
...
glob = fio.glob(fio.pathjoin(tmpdir, '*'))
---
...
#glob
---
- 2
...
{ string.match(glob[1], '^.*/(.*)'), string.match(glob[2], '^.*/(.*)') }
---
- - file.1
  - file.2
...
fio.stat(file1).inode == fio.stat(file2).inode
---
- true
...
fh3 = fio.open(file3, { 'O_RDWR', 'O_TRUNC', 'O_CREAT' }, 0x1FD)
---
...
fh1:stat().inode ~= fh3:stat().inode
---
- true
...
0775
---
- 775
...
bit.band(fh3:stat().mode, 0x1FF) == 0x1FD
---
- true
...
fh3:write("abc")
---
- true
...
fio.rename(nil, nil)
---
- error: 'Usage: fio.rename(oldpath, newpath)'
...
fio.rename(file3, file4)
---
- true
...
fio.symlink(nil, nil)
---
- error: 'Usage: fio.symlink(target, linkpath)'
...
fio.symlink(file4, file3)
---
- true
...
fio.stat(nil)
---
- error: 'Usage: fio.stat(pathname)'
...
fio.stat(file3).size
---
- 3
...
fio.lstat(file3).size ~= fio.stat(file3).size
---
- true
...
fio.lstat(file3).mode ~= fio.stat(file3).mode
---
- true
...
fio.basename(fio.readlink(file3))
---
- file.4
...
bit.band(fio.stat(file4).mode, 0x1FF) == 0x1FD
---
- true
...
fio.chmod(nil, 0x1F8)
---
- error: 'Usage: fio.chmod(pathname, mode)'
...
fio.chmod(file4, 0x1F8) -- 0x770
---
- true
...
bit.band(fh3:stat().mode, 0x1FF) == 0x1F8
---
- true
...
bit.band(fio.stat(file4).mode, 0x1FF) == 0x1F8
---
- true
...
fio.mkdir(nil)
---
- error: Usage fio.mkdir(pathname[, mode])
...
fio.mkdir(fio.pathjoin(tmpdir, "dir"))
---
- true
...
-- cleanup directories
{ fh1:close(), fh3:close() }
---
- - true
  - true
...
{ fh1:close(), errno.strerror(), fh3:close(), errno.strerror() }
---
- - false
  - Bad file descriptor
  - false
  - Bad file descriptor
...
fio.rmdir(nil)
---
- error: 'Usage: fio.rmdir(pathname)'
...
fio.rmdir(fio.pathjoin(tmpdir, "dir"))
---
- true
...
{ fio.unlink(file1), fio.unlink(file2), fio.unlink(file3), fio.unlink(file4) }
---
- - true
  - true
  - true
  - true
...
{ fio.unlink(file1), fio.unlink(file2), fio.unlink(file3), fio.unlink(file4) }
---
- - false
  - false
  - false
  - false
...
fio.rmdir(tmpdir)
---
- true
...
{ fio.rmdir(tmpdir), errno.strerror() }
---
- - false
  - No such file or directory
...
fio.unlink()
---
- error: 'Usage: fio.unlink(pathname)'
...
fio.unlink(nil)
---
- error: 'Usage: fio.unlink(pathname)'
...
-- dirname
fio.dirname(nil)
---
- null
...
fio.dirname('abc')
---
- .
...
fio.dirname('/abc')
---
- /
...
fio.dirname('/abc/cde')
---
- /abc
...
fio.dirname('/abc/cde/')
---
- /abc
...
fio.dirname('/')
---
- /
...
