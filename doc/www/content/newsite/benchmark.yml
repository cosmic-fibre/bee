---
title   : "Bee - Benchmarks"
slug    : "benchmark"
save_as : "benchmark.html"
template: "benchmark"
blocks  :
  content :
    format: rst
    content: |
      ---------------------------------------------------
                            Preface
      ---------------------------------------------------

      There are lies, then there is statistics, but
      the first place in misrepresenting the truth
      is undoubtedly owned by benchmarks.

      Comparing Bee with other systems, apples
      to apples, is not strictly correct: the server
      networking subsystem is fully asynchronous and
      it's possible to proxy all clients via a single
      socket. In this case, responses to queries are
      sent as soon as they are ready. Most production
      applications use asynchronous and batched I/O
      with Bee.

      As long as the overhead of system calls and context
      switches is the single largest contributor to the
      cost of serving a single request, use of batched
      and multiplexed I/O produces an order of magnitude
      better results, when compared with traditional
      multi-threaded workloads. A tool we developed for our
      own use, `nosqlbench <http://github.com/mailru/nosqlbench>`_,
      utilizes this approach at full.

      However, to compare with the rest of the world,
      a standardized benchmarking kit is more appropriate.
      This is why Yahoo! Cloud Serving Benchmark |copy| was
      used to produce the charts below. A fork of YCSB with
      Bee support is available
      `here <https://github.com/bigbes92/YCSB>`_. Since YCSB
      was developed to compare cloud key/value servers, it
      provides a very narrow view at performance of a tested
      server. For example, performance of secondary keys or
      overhead of locking (which Bee doesn't have) is
      not tested at all.

      .. |copy| unicode:: U+000A9

      ----------------------------------------------------
                          What is YCSB
      ----------------------------------------------------

      Yahoo! Cloud Serving Benchmark (c) consists of two
      components:

      - the client, which generates the load according to a \
        workload type and analyzes latency and throughput,
      - workload files, which define a single benchmark by \
        describing the size of the data set, the total amount \
        of requests, the ratio of read and write queries.

      There are 6 major workload types in YCSB:

      - workload **A**, 50/50 update/read ratio, size of the \
        data set is 200 000 key/value pairs,
      - workload **B**, 5/95 update/read ratio, the same size \
        of the data set,
      - workload **C** is 100% read-only,
      - workload **D** 5/95 insert/read ratio, the read load is \
        skewed towards the end of the key range,
      - workload **E**, 5/95 ratio of insert/reads over a range \
        of 10 records,
      - workload **F**, 95% read/modify/write, 5% read.

      For additional information on YCSB and workload types, please visit
      `YCSB official page on Github <http://github.com/brianfrankcooper/YCSB>`_.

      All charts below were measured using 1M queries per test,
      averaged over 8 consecutive test runs.

      Configuration files for the tested systems can be found
      `on it's Github page <https://github.com/bigbes92/ycsb-expand-db/tree/master/confs>`_.
...
