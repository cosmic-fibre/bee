#!/bin/sh

set -e

CFG=$1
ACTION=$2
CONFIG_DIR=/var/lib/bee/started
SNAPSHOT_DIR=/var/lib/bee/snapshot
PID_DIR=/var/run/bee
LOG_DIR=/var/log/bee
DB=/usr/bin/bee
SSD=start-stop-daemon
CFG_DIR=/etc/bee/instances.enabled

cd $CFG_DIR

usage="Usage: sh $0 /path/to/config.file start|stop"

if ! test -x $DB; then
    exit 0
fi

if test -z "$CFG"; then
    echo $usage
    exit 5
fi

if ! echo $ACTION|grep -q '^\(start\|stop\)$'; then
    echo $usage
    exit 5
fi


if ! test -r "$CFG"; then
    if echo $CFG|grep -q '\.cfg$'; then
        echo File $CFG not found
        exit 10
    else
        if ! test -r "$CFG.cfg"; then
            echo "Instance config '$CFG' not found"
            exit 15
        fi
        CFG="$CFG.cfg"
    fi
fi

CFG=`readlink -f "$CFG"`

if ! test -x $DB; then
    echo "$DB not found or can't be started"
    exit 20
fi

NAME=`basename $CFG .cfg`

PID=$PID_DIR/$NAME.pid
SCFG=$CONFIG_DIR/$NAME
RUNDIR=$SNAPSHOT_DIR/$NAME
LOG=$LOG_DIR/$NAME.log
LOGGER="exec /usr/lib/bee/logger $LOG"
SOCKETS=`grep \
    '^[[:space:]]*\(opt[[:space:]]\+\)\?file_descriptors[[:space:]]*=[[:space:]]*[[:digit:]]\+' $CFG \
    | tail -n 1 \
    | sed 's/[^[:digit:]]//g'`


if test -z $SOCKETS; then
    SOCKETS=1023
fi

if ! test -x $PID_DIR; then
    install -obee -gbee -d -m0750 $PID_DIR
fi

SSDARGS_NO_PID="--quiet --chdir $RUNDIR --chuid bee --exec"
SSDARGS="--pidfile $PID $SSDARGS_NO_PID"

if [ $SOCKETS -gt 1024  -a $SOCKETS -lt 65000 ]; then
    ulimit -n $SOCKETS
fi

ulimit -c unlimited

comment_str="#### - commented by init script"
sed "s/^[[:space:]]*file_descriptors.*/# & $comment_str/" $CFG > $SCFG

echo "pid_file = $PID"        >> $SCFG
echo "logger   = \"$LOGGER\"" >> $SCFG
grep '^[[:space:]]*admin_port[[:space:]]*=' $CFG |tail -n 1 >> $SCFG
grep '^[[:space:]]*primary_port[[:space:]]*=' $CFG |tail -n 1 >> $SCFG

$DB -c $SCFG -v --check-config

if [ ! -d $RUNDIR ]; then
    install -d -obee -gbee -m0750 $RUNDIR
    cd $RUNDIR
    if ! $SSD --start $SSDARGS $DB -- --init-storage -v -c $SCFG;
    then
        rm -fr $RUNDIR
        exit 25
    fi
fi

if [ $ACTION = 'start' ]; then
    echo -n "    Starting '$NAME' ... "
else
    echo -n "    Stopping '$NAME' ... "
    SSDARGS="--retry 15 $SSDARGS"
fi

if $SSD --$ACTION $SSDARGS $DB -- -B -v -c $SCFG; then
    echo "ok"
else
    ret=$?
    if [ $ret -eq 1 ]; then
        if [ $ACTION = 'start' ]; then
            echo "already started"
        else
            echo "already stoppped"
        fi
    else
        echo "failed"
    fi
fi
